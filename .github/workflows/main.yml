name: Deploy Minikube Cluster AWS
on: # [pull_request, workflow_dispatch] # el primero que se relice activara sera el trigger
  pull_request:

  workflow_dispatch:
    inputs:

      instance_type:
        description: 'Colocar el tipo de instancia donde se desplegara el cluster de minikube' #Se puede poner condiciones ejemplo: diferente a t2.micro
        required: true

  #push:
  #  branches:
  #    - master
  #pull_request:
  #workflow_dispatch:

env:
  TF_VAR_instance_type: "${{ github.event.inputs.instance_type }}"

#  AWS_ACCESS_KEY: 
#  AWS_ACCESS_SECRET_KEY: 

defaults:
  run:
    working-directory: ./Terraform_cicd

#permissions:
#  id-token: write # This is required for requesting the JWT
#  contents: read  # This is required for actions/checkout
#  pull-requests: write

jobs:
  build:
    name: Buill aws EC2 with terraform
    runs-on: ubuntu-latest

    steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-2

        #- name: Configure AWS Credentials for China region audience
        #  uses: aws-actions/configure-aws-credentials@v4
        #  with:
        #    audience: sts.amazonaws.com.cn
        #    aws-region: us-west-1
        #    role-to-assume: arn:aws:iam::640109666574:role/github-oidc-terraform-aws-tfstates-role

        - name: load & test action
          uses: ./Terraform_cicd/.github/actions/node-ci

        - name: Terraform Plan
          id: plan
          run: terraform plan 
          #continue-on-error: true
          #working-directory: ./Terraform_cicd

        - name: Terraform Apply
          run: terraform apply -auto-approve
          #working-directory: ./Terraform_cicd




        
